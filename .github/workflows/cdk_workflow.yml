name: Deploy with CDK

on:
  push:
    branches: [main, stage, dev]
  pull_request:
    branches: [main, stage]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set AWS Role ARN based on branch
        id: set-role
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ENV=PROD" >> $GITHUB_ENV
            echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
            echo "ROLE_ARN=arn:aws:iam::${{ secrets.PROD_ACCOUNT_ID }}:role/CDKAutoRole" >> $GITHUB_ENV
            echo "STAGE_BUCKET=stage-datalake-us-east-1-${{ secrets.PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "CURATED_BUCKET=curated-datalake-us-east-1-${{ secrets.PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "APPLICATION_BUCKET=application-datalake-us-east-1-${{ secrets.PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "stage" ]]; then
            echo "ENV=STAGE" >> $GITHUB_ENV
            echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
            echo "ROLE_ARN=arn:aws:iam::${{ secrets.STAGE_ACCOUNT_ID }}:role/CDKAutoRole" >> $GITHUB_ENV
            echo "STAGE_BUCKET=stage-datalake-us-east-1-${{ secrets.STAGE_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "CURATED_BUCKET=curated-datalake-us-east-1-${{ secrets.STAGE_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "APPLICATION_BUCKET=application-datalake-us-east-1-${{ secrets.STAGE_ACCOUNT_ID }}" >> $GITHUB_ENV
          else
            echo "ENV=DEV" >> $GITHUB_ENV
            echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
            echo "ROLE_ARN=arn:aws:iam::${{ secrets.DEV_ACCOUNT_ID }}:role/CDKAutoRole" >> $GITHUB_ENV
            echo "STAGE_BUCKET=stage-datalake-us-east-1-${{ secrets.DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "CURATED_BUCKET=curated-datalake-us-east-1-${{ secrets.DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "APPLICATION_BUCKET=application-datalake-us-east-1-${{ secrets.DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: us-east-1

      - name: Install AWS CDK
        run: npm install -g aws-cdk@2.130.0

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: CDK Bootstrap
        run: cdk bootstrap

      - name: CDK Diff
        run: cdk diff || true  # Prevents failure if there are changes

      - name: CDK Deploy
        run: cdk deploy --require-approval never
